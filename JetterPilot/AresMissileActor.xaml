<myTypes:ClientActor x:Class="JetterPilot.AresMissileActor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:myTypes="clr-namespace:JetterPilot"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <!--One way to do storyboards is to create them in the XAML as Resources and target XAML elements like a Canvas with animations.-->

        <!-- Create a storyboard. The storyboard is given a "key" so we can find it in code later.  That way code can start and stop the storyboard from code. -->
        <Storyboard x:Key="SpinningFallingDeathStoryKey" RepeatBehavior="Forever">

            <!-- Create an animation to rotate the canvas.  The TargetName must be a 
            object that is related to the StoryBoard.  In this case the StoryBoard is part of UserControl, and inside 
            that user control is canvas that has the bogey, and that canvas is a UIElement (base class)
            that has a TransformGroup, with children.  The child at index 2 is known/cast to be a RotateTransform, 
            so that angle is the target property of the (double) animation.  -->
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AresMissileCanvas" 
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" RepeatBehavior="Forever">
                <!--A spline is math function that ramps up its velocity to get to its next value, rather than just jumping
                to some constant volocity.  A key frame is an entry that says that at "this time" the target (in this case the
                angle) should be "this value".  For example, the second SplineDoubleKeyFrame entry says that 0.5 seconds 
                after the animation starts, the angle should be 180 degrees.-->
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="180"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01.0000000" Value="360"/>
            </DoubleAnimationUsingKeyFrames>

            <!--Fade out the bogey-->
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:10" Storyboard.TargetName="AresMissileCanvas" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="1.0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:03.0000000" Value="0.0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:10.0000000" Value="0.0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </UserControl.Resources>
    <Canvas Name="BogeyRadarIconCanvas">

        <Canvas Name="BogeyRadarTrackingMarkCanvas" Visibility="Hidden">
            <Ellipse x:Name="BogeyRadarTrackingMarkRect"
                       Canvas.Top="-10" Canvas.Left="-10"  Height="20" Width="20" StrokeThickness="1.0">
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource UIFireControlRedColor}"/>
                </Ellipse.Stroke>
            </Ellipse>
        </Canvas>

        <Canvas Name="AresMissileCanvas" Height="20" Width="20" ClipToBounds="False">

            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform CenterX="0" CenterY="0" ScaleX="1.0" ScaleY="1.0"/>
                    <SkewTransform/>
                    <RotateTransform CenterX="0" CenterY="0"/>
                    <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
            </Canvas.RenderTransform>

            <Canvas Name="BogeyBlipCanvas" Visibility="Hidden">
                <Ellipse x:Name="BogeyBlipEllipse" Canvas.Top="-1" Canvas.Left="-1"  Height="2" Width="2" >
                    <Ellipse.Fill>
                        <SolidColorBrush Color="{DynamicResource UIRadarBlipPrimeMissileColor}"/>
                    </Ellipse.Fill>
                    <Ellipse.Effect>
                        <BlurEffect Radius="2"/>
                    </Ellipse.Effect>
                </Ellipse>
            </Canvas>

            <Canvas Name="BogeyEyeshotVisCanvas" Visibility="Visible" Height="20" Width="20" ClipToBounds="False">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform CenterX="10" CenterY="10" ScaleX="0.5" ScaleY="0.4"/>
                        <SkewTransform/>
                        <RotateTransform CenterX="0" CenterY="0"/>
                        <TranslateTransform X="-10" Y="-10"/>
                    </TransformGroup>
                </Canvas.RenderTransform>


                <Ellipse Name="OuterShieldCircle" Width="20" Height="20" Visibility="Hidden" StrokeThickness="0.3" Canvas.Left="0" Canvas.Top="0"  Stroke="WhiteSmoke"/>
                <Canvas Canvas.Left="5" Canvas.Top="5">
                    <Ellipse Name="AresMissileInnerCircle" Visibility="Hidden" Height="10" Stroke="Black" Width="10" Fill="White">
                        <Ellipse.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="5" CenterY="5"/>
                                <SkewTransform/>
                                <RotateTransform CenterX="5" CenterY="5"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Ellipse.RenderTransform>

                    </Ellipse>
                </Canvas>
                <Canvas Canvas.Left="0.5" Canvas.Top="0.5">
                    <Polygon Name="AresMissileBodyPoly" 
                             Points="8,2 9,4 9,6 9.1,7 9.1,15 8,15 9,16 9,17 10,19 11,17 11,16 12,15 10.9,15 10.9,7 11,6 11,4 12,2 10,2.5" 
                             Stroke="Gray" StrokeThickness="0.5">
                        <Polygon.Fill>
                            <SolidColorBrush Color="Gold" Opacity="1.0"/>
                        </Polygon.Fill>
                    </Polygon>
                </Canvas>
            </Canvas>
        </Canvas>

    </Canvas>
</myTypes:ClientActor>
